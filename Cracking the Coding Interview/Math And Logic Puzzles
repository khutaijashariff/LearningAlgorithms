public class MathLogic {

/**
 * You have a basketball hoop and someone says that you can play one of two
 * games. Game 1: You get one shot to make the hoop. Game 2: You get three shots
 * and you have to make two of three shots. If p is the probability of making a
 * particular shot, for which values of p should you pick one game or the other?
 * 
 */

  public int chooseGame(double p) {
    double g1 = p;
    double g2 = p^3 * ((1 - p) * p * p + p * (1 - p) * p + p * p * (1-p));
    return g1 >= g2 ? 1 : 2;
  }
}

/**
 * There are three ants on different vertices of a triangle. What is the
 * probability of collision (between any two or all of them) if they start
 * walking on the sides of the triangle? Assume that each ant randomly picks a
 * direction, with either direction being equally likely to be chosen, and that
 * they walk at the same speed. Assume they will stop once they come to another
 * vertex.
 */

  public double probability(int nVertices) {
    // write implementation here
    return 1 - (1 / Math.pow(2, nVertices-1));
  }
  
  
/**
 * The Apocalypse: In the new post-apocalyptic world, the world queen is desperately concerned
 * about the birth rate. Therefore, she decrees that all families should ensure that they have one girl or
 * else they face massive fines. If all families abide by this policy-that is, they have continue to have
 * children until they have one girl, at which point they immediately stop-what will the gender ratio
 * of the new generation be? (Assume that the odds of someone having a boy or a girl on any given
 * pregnancy is equal.)
 */
 
  public double runNFamilies(int n) {
        int boys = 0;
        int girls = 0;
        for (int i = 0; i < n; i++) {
            int[] genders = runOneFamily();
            girls += genders[0];
            boys += genders[1];
        }
        return girls / (double) (boys + girls);
    }

    public int[] runOneFamily() {
        Random random = new Random();
        int boys = 0;
        int girls = 0;
        while (girls == 0) { // until we have a girl
            if (random.nextBoolean()) { // girl
                girls += 1;
            } else { // boy
                boys += 1;
            }
        }
        int[] genders = {girls, boys};
        return genders;
     }
     
/**100 Lockers: There are 100 closed lockers in a hallway. A man begins by opening all 100 lockers.
  *Next, he closes every second locker. Then, on his third pass, he toggles every third locker (closes it if
  *it is open or opens it if it is closed). This process continues for 100 passes, such that on each pass i,
  *the man toggles every ith locker. After his 100th pass in the hallway, in which he toggles only locker
  *#100, how many lockers are open?
  */
     
     public void hundredLockers() {
        int n = 100;
        int count = 0;
        for(int i=1; i<=n; i++) {
            int closestRoot = (int) Math.sqrt(i);
            if(i == (closestRoot*closestRoot)) {
                count++;
            }
        }
        System.out.println(count);
    }

}



